---
import { getCollection } from "astro:content";
import TagsSVG from "@/images/tags.svg";
import CircleSVG from "@/images/circle.svg";
import Badge from "./Badge.astro";
import FunnelXSVG from "@/images/funnel-x.svg";

type Props = {
  activeTag?: string;
};

const { activeTag } = Astro.props;

const exps = await getCollection("experience");

const expTypeCounts = exps.reduce((map, exp) => {
  map.set(exp.data.type, (map.get(exp.data.type) ?? 0) + 1);
  return map;
}, new Map<string, number>());
---

<div class="flex items-center gap-x-2.5">
  <TagsSVG class="size-5 text-primary-base" />
  <ul class="flex items-center gap-1.5">
    {
      [...expTypeCounts.entries()]
        .sort(([, countA], [, countB]) => {
          return countB - countA;
        })
        .map(([tag, count]) => {
          const badgeStyle =
            tag === "Work"
              ? 2
              : tag === "Sabbatical"
                ? 4
                : tag === "Education" || tag === "Project"
                  ? 3
                  : 1;

          return (
            <li class="text-slate-500 hover:text-slate-700 text-sm">
              <a href={`/tags/${tag.toLowerCase()}`}>
                <Badge class="relative" style={badgeStyle} dot={false}>
                  <span>
                    {tag} ({count})
                  </span>
                  {tag.toLowerCase() === activeTag?.toLowerCase() && (
                    <CircleSVG class="absolute top-[-2px] right-[-2px] size-1.5 fill-rose-600" />
                  )}
                </Badge>
              </a>
            </li>
          );
        })
    }
  </ul>
  <a class:list={["text-slate-500", !activeTag && "hidden"]} href="/">
    <FunnelXSVG class="size-4" />
  </a>
</div>
