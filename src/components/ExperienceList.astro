---
import { getCollection } from "astro:content";
import RootLayout from "@/layouts/RootLayout.astro";
import Container from "@/components/Container.astro";
import Experience from "@/components/Experience.astro";
import ExpTypeTagList from "@/components/ExpTypeTagList.astro";
import type { CollectionEntry } from "astro:content";
import type { ComponentProps } from "astro/types";
import Badge from "./Badge.astro";
import XSVG from "@/images/x.svg";

type Props = {
  tagDisplayName?: string;
  expFilter?: (exp: CollectionEntry<"experience">) => boolean;
} & ComponentProps<typeof ExpTypeTagList>;

const { tagDisplayName, expFilter, ...expTypeTagListProps } = Astro.props;

const exps = (await getCollection("experience"))
  .filter((exp) => {
    return expFilter ? expFilter(exp) : true;
  })
  .sort((a, b) => b.data.from.valueOf() - a.data.from.valueOf());
---

<RootLayout>
  <div class="pt-16 pb-12 sm:pb-4 lg:pt-12 lg:flex lg:gap-x-8">
    <div class="lg:grow lg:max-w-4xl">
      <Container>
        <div class="flex items-center gap-x-2">
          <h1 class="text-2xl/7 font-bold text-slate-900">Experience</h1>
          {
            tagDisplayName && (
              <a href="/">
                <Badge dot={false} style={5}>
                  <span>{tagDisplayName}</span>
                  <XSVG class="size-3" />
                </Badge>
              </a>
            )
          }
        </div>
      </Container>
      <div
        class="divide-y divide-slate-100 sm:mt-4 lg:mt-8 lg:border-t lg:border-slate-100"
      >
        {exps.map((exp) => <Experience experience={exp} />)}
      </div>
    </div>
    <div class="hidden lg:block lg:mt-16 lg:shrink-0 lg:px-5">
      <ExpTypeTagList {...expTypeTagListProps} />
    </div>
  </div>
</RootLayout>
