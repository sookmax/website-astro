---
import { getCollection } from "astro:content";
import RootLayout from "@/layouts/RootLayout.astro";
import Container from "@/components/Container.astro";
import Experience from "@/components/Experience.astro";
import TagList from "@/components/TagList.astro";

const xps = (await getCollection("experience")).sort(
  (a, b) => b.data.from.valueOf() - a.data.from.valueOf()
);

const typeCounts = xps.reduce((map, xp) => {
  map.set(xp.data.type, (map.get(xp.data.type) ?? 0) + 1);
  return map;
}, new Map<string, number>());

const tagCounts = xps.reduce((map, xp) => {
  xp.data.tags?.forEach((tag) => {
    map.set(tag, (map.get(tag) ?? 0) + 1);
  });
  return map;
}, new Map<string, number>());
---

<RootLayout>
  <div class="pt-16 pb-12 sm:pb-4 lg:pt-12">
    <Container>
      <h1 class="text-2xl/7 font-bold text-slate-900">Experience</h1>
    </Container>
    <div class="lg:flex lg:gap-x-4">
      <div
        class="divide-y divide-slate-100 sm:mt-4 lg:grow lg:mt-8 lg:border-t lg:border-slate-100"
      >
        {xps.map((xp) => <Experience experience={xp} />)}
      </div>
      <div class="hidden lg:block lg:mt-8 lg:shrink-0 lg:px-5">
        <div class="flex flex-col gap-y-6">
          <TagList>
            <h3 slot="tag-title" class="text-xs font-mono text-slate-600">
              Experience Type
            </h3>
            <ul slot="tag-list" class="flex flex-col items-start gap-2">
              {
                [...typeCounts.entries()]
                  .sort(([, countA], [, countB]) => {
                    return countB - countA;
                  })
                  .map(([tag, count]) => (
                    <li class="text-slate-400 text-xs">
                      <a>
                        {tag} ({count})
                      </a>
                    </li>
                  ))
              }
            </ul>
          </TagList>
          <TagList>
            <h3 slot="tag-title" class="text-xs font-mono text-slate-600">
              Technologies & Skills
            </h3>
            <ul slot="tag-list" class="flex flex-col items-start gap-2">
              {
                [...tagCounts.entries()]
                  .sort(([tagA], [tagB]) => {
                    if (tagA.toLowerCase() < tagB.toLowerCase()) return -1;
                    if (tagA.toLowerCase() > tagB.toLowerCase()) return 1;
                    return 0;
                  })
                  .map(([tag, count]) => (
                    <li class="text-slate-400 text-xs">
                      <a>
                        {tag} ({count})
                      </a>
                    </li>
                  ))
              }
            </ul>
          </TagList>
        </div>
      </div>
    </div>
  </div>
</RootLayout>
