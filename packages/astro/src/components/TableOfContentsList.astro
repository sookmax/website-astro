---
import type { TocItem } from "@/utils/toc";
import { cn } from "@website/shared/utils";
import CheckSVG from "@website/shared/svg/check.svg";

interface Props {
  toc: TocItem[];
  depth?: number;
  isMobile?: boolean;
}

const { toc, isMobile = false, depth = 0 } = Astro.props;
---

<ul
  class={cn("text-gray-700", isMobile && "w-full")}
  style={{ "--depth": depth }}
>
  {
    toc.map((heading) => (
      <li>
        <a
          class={cn(
            "flex pl-[calc(1rem_*_var(--depth)_+_0.5rem)] py-1 hover:text-emerald-500",
            isMobile && "px-3 py-0 text-sm text-gray-500",
            "aria-[current=true]:font-medium aria-[current=true]:text-indigo-700"
          )}
          href={`#${heading.slug}`}
        >
          <span
            class={cn(
              isMobile &&
                "p-2 border-t w-full flex items-center justify-between"
            )}
          >
            <span>{heading.text}</span>
            <span
              class={cn(
                !isMobile && "hidden",
                "[a:not([aria-current='true'])_&]:hidden"
              )}
            >
              <CheckSVG class="size-4" />
            </span>
          </span>
        </a>
        {heading.children.length > 0 && (
          <Astro.self
            toc={heading.children}
            depth={depth + 1}
            isMobile={isMobile}
          />
        )}
      </li>
    ))
  }
</ul>
