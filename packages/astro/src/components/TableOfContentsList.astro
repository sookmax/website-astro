---
import type { TocItem } from "@/utils/toc";
import { cn } from "@website/shared/utils";
import CircleSVG from "@/images/circle.svg";

interface Props {
  toc: TocItem[];
  depth?: number;
  isMobile?: boolean;
}

const { toc, isMobile = false, depth = 0 } = Astro.props;
---

<ul
  class={cn(
    "text-slate-700 dark:text-slate-200",
    depth > 0 && "pl-4",
    isMobile && "w-full"
  )}
  style={{ "--depth": depth }}
>
  {
    toc.map((heading) => (
      <>
        <li>
          <a
            class={cn(
              "flex py-1 hover:text-emerald-500 dark:hover:text-emerald-300",
              isMobile && "py-2 text-sm",
              "aria-[current=true]:font-medium aria-[current=true]:text-emerald-600 dark:aria-[current=true]:text-emerald-300"
            )}
            href={`#${heading.slug}`}
          >
            <span
              class={cn(
                "w-full flex items-center",
                isMobile ? "justify-between" : "space-x-3"
              )}
            >
              <span class="truncate">{heading.text}</span>
              <span
                class={cn(
                  "hidden [a[aria-current='true']_&]:block xl:[a[aria-current='true']_&]:hidden"
                )}
              >
                <CircleSVG class="size-1.5 fill-emerald-500 dark:fill-emerald-300" />
              </span>
            </span>
          </a>
        </li>
        {heading.children.length > 0 && (
          <li>
            <Astro.self
              toc={heading.children}
              depth={depth + 1}
              isMobile={isMobile}
            />
          </li>
        )}
      </>
    ))
  }
</ul>
