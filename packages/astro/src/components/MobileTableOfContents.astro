---
import ChevronRightSVG from "@website/shared/svg/chevron-right.svg";
import TableOfContentsList from "./TableOfContentsList.astro";
import type { HTMLAttributes } from "astro/types";
import type { TOC } from "@/utils/toc";
import { cn } from "@website/shared/utils";
import HalfCirclesIcon from "./HalfCirclesIcon.astro";
import BackToExperienceListLink from "./BackToExperienceListLink.astro";

type Props = HTMLAttributes<"nav"> & {
  toc: TOC;
};

const { toc, class: className, ...props } = Astro.props as Props;
---

<mobile-starlight-toc
  data-min-h={toc.options.minHeadingLevel}
  data-max-h={toc.options.maxHeadingLevel}
>
  <div class="flex items-center space-x-2">
    <HalfCirclesIcon class="bg-emerald-500 dark:bg-emerald-300" />
    <nav
      aria-labelledby="starlight__on-this-page--mobile"
      class={cn(className, "flex-1 min-w-0 select-none")}
      {...props}
    >
      <details id="starlight__mobile-toc">
        <summary
          id="starlight__on-this-page--mobile"
          class="cursor-pointer py-2.5 flex items-center list-none [&::-webkit-details-marker]:hidden text-sm font-medium text-slate-500 dark:text-slate-200"
        >
          <div class="max-w-full flex items-center space-x-1 sm:space-x-2">
            <span class="shrink-0">On this page</span>
            <ChevronRightSVG
              class="shrink-0 text-slate-300 size-3 [details[open]_&]:rotate-90"
            />
            <span class="display-current truncate"></span>
          </div>
        </summary>
        <div
          class="max-h-[45dvh] overflow-y-auto overscroll-contain absolute w-full left-0 bg-white dark:bg-slate-900 shadow-md shadow-slate-200 dark:shadow-slate-800 px-4 sm:px-8 pb-4 [&_li:not(:last-of-type)]:border-b [&_li:not(:last-of-type)]:border-slate-100 dark:[&_li:not(:last-of-type)]:border-slate-700"
        >
          <TableOfContentsList isMobile toc={toc.items} />
          <div
            class="text-sm border-t border-slate-100 dark:border-slate-700 py-4"
          >
            <BackToExperienceListLink />
          </div>
        </div>
      </details>
    </nav>
  </div>
</mobile-starlight-toc>

<script>
  import { StarlightTOC } from "./starlight-toc";

  class MobileStarlightTOC extends StarlightTOC {
    override set current(link: HTMLAnchorElement) {
      super.current = link;
      const display = this.querySelector(".display-current") as HTMLSpanElement;
      if (display) display.textContent = link.textContent;
    }

    constructor() {
      super();
      const details = this.querySelector("details");
      if (!details) return;
      const closeToC = () => {
        details.open = false;
      };
      // Close the table of contents whenever a link is clicked.
      details.querySelectorAll("a").forEach((a) => {
        a.addEventListener("click", closeToC);
      });
      // Close the table of contents when a user clicks outside of it.
      window.addEventListener("click", (e) => {
        if (!details.contains(e.target as Node)) closeToC();
      });
      // Or when they press the escape key.
      window.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && details.open) {
          const hasFocus = details.contains(document.activeElement);
          closeToC();
          if (hasFocus) {
            const summary = details.querySelector("summary");
            if (summary) summary.focus();
          }
        }
      });
    }
  }

  customElements.define("mobile-starlight-toc", MobileStarlightTOC);
</script>
