---
import { getCollection } from "astro:content";
import RootLayout from "@/layouts/RootLayout.astro";
import Container from "@/components/Container.astro";
import Experience from "@/components/Experience.astro";
import ExpTypeTagList from "@/components/ExpTypeTagList.astro";
import type { CollectionEntry } from "astro:content";
import type { ComponentProps } from "astro/types";

const EXPERIENCE_HEADER_ID = "experience";

type Props = {
  tagDisplayName?: string;
  expFilter?: (exp: CollectionEntry<"experience">) => boolean;
} & ComponentProps<typeof ExpTypeTagList>;

const { tagDisplayName, expFilter, ...expTypeTagListProps } = Astro.props;

const exps = (await getCollection("experience"))
  .filter((exp) => {
    return expFilter ? expFilter(exp) : true;
  })
  .sort((a, b) => b.data.from.valueOf() - a.data.from.valueOf());
---

<RootLayout>
  <div class="relative pt-16 pb-12 sm:pb-4 lg:pt-12">
    <Container>
      <div class="flex items-center gap-x-2">
        <h1
          id={EXPERIENCE_HEADER_ID}
          class="text-2xl/7 font-bold text-slate-900"
        >
          Experience
        </h1>
      </div>
    </Container>
    <Container
      class="sticky top-0 mt-6 py-3 bg-primary-2x-light/50 backdrop-blur-sm"
    >
      <ExpTypeTagList {...expTypeTagListProps} />
    </Container>
    <div
      class="divide-y divide-slate-100 sm:mt-4 lg:mt-8 lg:border-t lg:border-slate-100"
    >
      {exps.map((exp) => <Experience experience={exp} />)}
    </div>
  </div>
</RootLayout>
