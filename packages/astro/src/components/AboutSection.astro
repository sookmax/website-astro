---
import type { HTMLAttributes } from "astro/types";
import TinyWaveFormIcon from "./TinyWaveFormIcon.astro";
import A from "./mdx/A.astro";

type Props = HTMLAttributes<"section">;
---

<about-section class="block">
  <section {...Astro.props}>
    <h2
      class="flex items-center font-mono text-sm/7 font-medium text-slate-900"
    >
      <TinyWaveFormIcon
        colors={["fill-slate-300", "fill-primary-base"]}
        class="h-2.5 w-2.5"
      />
      <span class="ml-2.5">About</span>
    </h2>
    <div
      class="about-text mt-2 text-sm/relaxed 2xl:text-base text-slate-700 line-clamp-3 xl:line-clamp-5 space-y-3.5"
    >
      <p>
        I wandered in from the world of data, stumbled around, and stayed for
        the joy of crafting user interfaces for the web.
      </p>
      <p>
        I began my career as a data analyst after finishing college in 2015, and
        did that for about four years before I jumped into web development. In
        hindsight, it was always the visual side of data&mdash;the charts, the
        tables, the interfaces&mdash;that truly pulled me in.
      </p>
      <p>
        An insatiable curiosity about how the tools I used daily actually
        workedâ€”web apps like <A
          href="https://posit.co/products/open-source/rstudio-server/"
          >RStudio Server</A
        > and <A href="https://jupyter.org/">Jupyter Notebook</A>, which felt
        almost indistinguishable from desktop apps in terms of
        interactivityâ€”probably also contributed to my wanting to become a web
        developer.
      </p>
      <p>
        While web technology has become astonishingly capable, building for the
        web is still a tricky craft. Different devices, different browsers, and
        even different environments like WebViews or in-app browsers&mdash;it's
        no wonder how easy it is to introduce regressions or break a layout with
        a single change. These challenges grow exponentially when you're not
        building alone.
      </p>
      <p>
        Still, I believe great products are built by great teams&mdash;and great
        teams are built on trust, transparency, and mutual respect. That's the
        kind of team I want to be a part of. And the best way I know to earn
        that place is to become a more competent, thoughtful engineer myself.
      </p>
      <p>
        So here I am, trying to be a better web dev than yesterday, every day.
        ðŸŒ±
      </p>
    </div>
    <button
      type="button"
      class="cursor-pointer mt-2 text-sm/6 font-bold text-primary-base hover:text-primary-dark"
    >
      Show more
    </button>
  </section>
</about-section>

<script>
  // Define the behaviour for our new type of HTML element.
  class AboutSection extends HTMLElement {
    connectedCallback() {
      const showMoreButton = this.querySelector("button");

      showMoreButton?.addEventListener("click", () => {
        const text = this.querySelector(".about-text");
        if (text) {
          text.classList.remove("line-clamp-3", "xl:line-clamp-5");
          showMoreButton.remove();
        }
      });
    }
  }

  customElements.define("about-section", AboutSection);
</script>
