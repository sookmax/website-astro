---
import type { HTMLAttributes } from "astro/types";
import TinyWaveFormIcon from "./TinyWaveFormIcon.astro";

type Props = HTMLAttributes<"section">;
---

<about-section>
  <section {...Astro.props}>
    <h2
      class="flex items-center font-mono text-sm/7 font-medium text-slate-900"
    >
      <TinyWaveFormIcon
        colors={["fill-slate-300", "fill-primary-base"]}
        class="h-2.5 w-2.5"
      />
      <span class="ml-2.5">About</span>
    </h2>
    <p class="mt-2 text-base/7 text-slate-700 lg:line-clamp-3">
      I wandered in from the world of data, stuck around for the code, and
      stayed for the joy of bringing ideas to life on the web. I enjoy crafting
      user interfaces, and turning concepts into something people can actually
      use.
      <br />
      <br />
      Forever getting stuck and also forever breaking things.
    </p>
    <button
      type="button"
      class="cursor-pointer mt-2 hidden text-sm/6 font-bold text-primary-base hover:text-primary-dark lg:inline-block"
    >
      Show more
    </button>
  </section>
</about-section>

<script>
  // Define the behaviour for our new type of HTML element.
  class AboutSection extends HTMLElement {
    connectedCallback() {
      const showMoreButton = this.querySelector("button");

      showMoreButton?.addEventListener("click", () => {
        const p = this.querySelector("p");
        if (p) {
          p.classList.remove("lg:line-clamp-3");
          showMoreButton.remove();
        }
      });
    }
  }

  customElements.define("about-section", AboutSection);
</script>
