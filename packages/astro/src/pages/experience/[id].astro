---
import Badge from "@/components/Badge.astro";
import Container from "@/components/Container.astro";
import DateAndLocation from "@/components/DateAndLocation.astro";
import H2 from "@/components/mdx/H2.astro";
import H3 from "@/components/mdx/H3.astro";
import Ul from "@/components/mdx/Ul.astro";
import { GET_BADGE_STYLE } from "@/consts";
import RootLayout from "@/layouts/RootLayout.astro";
import { cn } from "@website/shared/utils";
import type { GetStaticPaths } from "astro";
import { render } from "astro:content";
import { getCollection } from "astro:content";
import { generateToc } from "@/utils/toc";
import TableOfContents from "@/components/TableOfContents.astro";
import { PAGE_TITLE_ID } from "@/consts";
import MobileTableOfContents from "@/components/MobileTableOfContents.astro";
import MobileHeader from "@/components/MobileHeader.astro";
import A from "@/components/mdx/A.astro";
import ScrollProgressBar from "@/components/ScrollProgressBar.astro";
import ExperienceAtUrl from "@/components/ExperienceAtUrl.astro";

export const getStaticPaths = (async () => {
  const experiences = await getCollection("experience");
  return experiences.map((experience) => ({
    params: {
      id: experience.id,
    },
    props: { experience },
  }));
}) satisfies GetStaticPaths;

const { experience } = Astro.props;
const { Content, headings } = await render(experience);

const PAGE_TITLE = experience.data.at
  ? `${experience.data.title} at ${experience.data.at}`
  : experience.data.title;

// https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/a#linking_to_an_element_on_the_same_page
const toc = generateToc([
  { depth: 2, slug: PAGE_TITLE_ID, text: "Overview" },
  ...headings,
]);
---

<RootLayout title={PAGE_TITLE} description={experience.data.description}>
  <div class="xl:flex xl:divide-x xl:divide-slate-200 dark:xl:divide-slate-800">
    <div class="relative flex-1 min-w-0 flex flex-col items-center">
      <ScrollProgressBar class="sticky top-0 z-20" />
      <div
        class="z-10 sticky top-0.5 w-full xl:hidden bg-white dark:bg-slate-950"
      >
        <Container class="mx-auto px-2.5">
          <MobileHeader />
        </Container>
      </div>
      <div
        class="z-10 sticky top-10.5 w-full bg-slate-50 dark:bg-slate-900 xl:hidden"
      >
        <Container class="relative mx-auto px-2.5">
          <MobileTableOfContents toc={toc} />
        </Container>
      </div>
      <Container
        class="md:max-w-full py-7 sm:py-9 xl:px-8 xl:py-7 2xl:px-20 2xl:py-10"
      >
        <article
          class={cn(
            "prose prose-slate dark:prose-invert prose-a:font-medium prose-a:text-(--tw-prose-bold) prose-hr:my-8 prose-strong:font-medium prose-li:my-1"
          )}
        >
          <header class="not-prose flex flex-col gap-3">
            <h1
              id={PAGE_TITLE_ID}
              class="flex items-center flex-wrap gap-1 text-xl lg:text-3xl font-bold text-slate-900 dark:text-slate-50 scroll-m-52 xl:scroll-m-30 space-x-2"
            >
              <span>{experience.data.title}</span>
              {
                experience.data.at && experience.data.atURL && (
                  <ExperienceAtUrl
                    at={experience.data.at}
                    atURL={experience.data.atURL}
                  />
                )
              }
            </h1>
            <p
              class="mt-3 xl:text-lg/8 font-medium text-slate-600 dark:text-slate-300"
            >
              {experience.data.description}
            </p>
            <div class="order-first flex items-center gap-1.5">
              <Badge dot={false} style={GET_BADGE_STYLE(experience.data.type)}>
                {experience.data.type}
              </Badge>
              <DateAndLocation
                from={experience.data.from}
                to={experience.data.to}
                location={experience.data.location}
              />
            </div>
          </header>
          <hr class="border-slate-200 dark:border-slate-700" />
          <Content
            components={{
              h2: H2,
              h3: H3,
              ul: Ul,
              a: A,
            }}
          />
        </article>
      </Container>
    </div>
    <aside
      class="hidden xl:flex-[0.3] xl:block xl:sticky xl:top-8 xl:min-w-60 2xl:min-w-72 xl:h-fit xl:px-4 xl:py-3"
    >
      <TableOfContents toc={toc} />
    </aside>
  </div>
</RootLayout>
